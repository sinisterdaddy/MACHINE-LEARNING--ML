# -*- coding: utf-8 -*-
"""1_linear_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PTOPY_0K0ZGE0tPuvlXyNPcgxbOtLsVC

<h2 style="color:green" align="center"> Linear 

---

Regression With One Variable</h2>

[link text](https://)<h3 style="color:purple">Sample problem of predicting home price in monroe, new jersey (USA)</h3>

Below table represents current home prices in monroe township based on square feet area, new jersey

<img src="homepricetable.JPG" style="width:370px;height:250px">

**Problem Statement**: Given above data build a machine learning model that can predict home prices based on square feet area

You can represent values in above table as a scatter plot (values are shown in red markers). After that one can draw a straight line that best fits values on chart.

<img src="scatterplot.JPG" style="width:600px;height:370px">

You can draw multiple lines like this but we choose the one where total sum of error is minimum

<img src="equation.PNG" style="width:600px;height:370px" >

You might remember about linear equation from your high school days math class. Home prices can be presented as following equation,

home price = m * (area) + b

Generic form of same equation is,

<img src="linear_equation.png" >
"""

import pandas as pd
import numpy as np
from sklearn import linear_model
import matplotlib.pyplot as plt

df = pd.read_csv('homeprices.csv')
df

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
plt.xlabel('area')
plt.ylabel('price')
plt.scatter(df.area,df.price,color='red',marker='+')

new_df = df.drop('price',axis='columns')
new_df

price = df.price
price

# Create linear regression object
reg = linear_model.LinearRegression()
reg.fit(new_df,price)

"""**(1) Predict price of a home with area = 3300 sqr ft**"""

reg.predict([[3300]])

reg.coef_

reg.intercept_

"""**Y = m * X + b (m is coefficient and b is intercept)**"""

3300*135.78767123 + 180616.43835616432

"""**(1) Predict price of a home with area = 5000 sqr ft**"""

reg.predict([[5000]])

"""<h3 style="color:purple">Generate CSV file with list of home price predictions</h3>"""

area_df = pd.read_csv("areas.csv")
area_df.head(3)

p = reg.predict(area_df)
p

area_df['prices']=p
area_df

area_df.to_csv("prediction.csv")

"""<h3>Exercise</h3>

<p >Predict canada's per capita income in year 2020. There is an exercise folder here on github at same level as this notebook, download that and you will find canada_per_capita_income.csv file. Using this build a regression model and predict the per capita income fo canadian citizens in year 2020</p>
"""